{"version":3,"file":"static/js/9.dd079402.chunk.js","mappings":"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","sources":["webpack://react-event-listener/./src/components/HomePage/homePage.module.css?edda","components/HomePage/HomePage.jsx","webpack://react-event-listener/./src/components/SwitcherBackground/switcher.module.css?026b","components/SwitcherBackground/SwitcherBackground.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"homePage_container__AYzZD\",\"title\":\"homePage_title__m8Mdo\",\"section\":\"homePage_section__11nvh\",\"nav\":\"homePage_nav__+OpNF\",\"activeNav\":\"homePage_activeNav__71u68\"};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styles from './homePage.module.css';\n\nconst HomePage = () => {\n  return (\n    <div className={styles.container}>\n      <h1 className={styles.title}>Event Listener</h1>\n      <div className={styles.section}>\n        <NavLink\n          to=\"/functionComponent\"\n          className={({ isActive }) =>\n            isActive ? `${styles.nav} ${styles.activeNav}` : styles.nav\n          }\n        >\n          Using the Functional Component (hooks)\n        </NavLink>\n        <NavLink\n          to=\"/classComponent\"\n          className={({ isActive }) =>\n            isActive ? `${styles.nav} ${styles.activeNav}` : styles.nav\n          }\n        >\n          Using the Class Component\n        </NavLink>\n        <NavLink\n          to=\"/Feedback\"\n          className={({ isActive }) =>\n            isActive ? `${styles.nav} ${styles.activeNav}` : styles.nav\n          }\n        >\n          Feedback\n        </NavLink>\n        <NavLink\n          to=\"/Contacts\"\n          className={({ isActive }) =>\n            isActive ? `${styles.nav} ${styles.activeNav}` : styles.nav\n          }\n        >\n          Contacts\n        </NavLink>\n        <NavLink\n          to=\"/SwitcherBackground\"\n          className={({ isActive }) =>\n            isActive ? `${styles.nav} ${styles.activeNav}` : styles.nav\n          }\n        >\n          Switcher Background and Input\n        </NavLink>\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"switcher_container__qChCM\",\"btn\":\"switcher_btn__gCkRp\"};","import { useEffect, useState } from 'react';\nimport HomePage from 'components/HomePage/HomePage';\n\nimport styles from './switcher.module.css';\n\n// const SwitcherBackground = () => {\n// //   const [isDisabled, setIsDisabled] = useState(true);\n//   const [color, setColor] = useState('#fff');\n//   const inderval = 1000;\n\n//   const getRandomHexColor = () => {\n//     return `#${Math.floor(Math.random() * 16777215)\n//       .toString(16)\n//       .padStart(6, 0)}`;\n//   };\n\n//   const startChangingColor = () => {\n//     setInterval(() => {\n//       return setColor(getRandomHexColor);\n//     }, inderval);\n//     // setIsDisabled(true);\n//   };\n\n//   const stopChangingColor = () => {\n//     clearInterval(inderval)\n//     setColor(\"#fff\");\n//     console.log(\"Stop\")    \n//       };\n\n//   return (\n//     <>\n//       <HomePage />\n//       <div className={styles.container} style={{ backgroundColor: color }}>\n//         <button\n//           className={styles.btn}\n//           id=\"btnStart\"\n//         //   disabled={!isDisabled}\n//           onClick={startChangingColor}\n//         >\n//           Start\n//         </button>\n//         <button\n//           className={styles.btn}\n//           id=\"btnStop\"\n//         //   disabled={isDisabled}\n//           onClick={stopChangingColor}\n//         >\n//           Stop\n//         </button>\n//       </div>\n//     </>\n//   );\n// };\n\n// export default SwitcherBackground;\n\n// Перший, простий і найважливіший хук. З назви зрозуміло, що він пов'язаний з станом компонента. Саме завдяки йому у функціональних компонентів з'явився внутрішній стан.\n\nconst SwitcherBackground = () => {\nconst [value, setValue] = useState(0); // Хук useState повертає масив із двох елементів: перший - поточне значення стану, другий - функцію для його зміни, яку можна використовувати де завгодно, наприклад, в обробнику подій. React буде зберігати цей стан між рендерами. Використовуючи деструктуризацію, можна задати будь-які імена змінних.\nconst [input, setInput] = useState(\"\");\n\n// Очистка поля ввода\n// Добавление состояния displayText:\nconst [displayText, setDisplayText] = useState(\"\");\n\nconst [isActive, setIsActive] = useState(false); // перемыкач  кнопки \n\nconst text = isActive ? \"Click me\" : \"Clicked\";\n\nuseEffect(() => {\n    console.log(`Setting document title to: You clicked ${value} times`);\n    document.querySelector(\"p\").textContent = `You clicked ${value} times`;\n  }); // Запускается только при изменении `value`\n  \n// useEffect выполняет функцию, которую вы ему передали, после того как компонент рендерится (отрисовывается) на экране.\n// В данном случае, функция внутри useEffect обновляет заголовок документа (document.title) с текстом, который включает текущее значение value.\n  return (\n    <>\n    <HomePage />\n    <div className={styles.container}>\n    <p>{value}</p>\n      <button className={styles.btn} type=\"button\" onClick={() => setValue(value + 1)}>\n        Increment value by 1\n      </button>\n      <form onSubmit={(e)=> {e.preventDefault(); setDisplayText(input); setInput(\"\")}}>\n        <input type=\"text\" value={input} onChange={(e) => setInput(e.target.value)}/>  {/* Атрибут value в элементе <input> отвечает за текущее значение, которое отображается в поле ввода. */}\n        <div>{displayText}</div>\n      </form>\n      <button className={styles.btn} onClick={() => setIsActive(prevState => !prevState)}>{text}</button> {/* или второй вариант  setIsActive(isActive => !isActive)*/ }\n    </div>\n    </>\n  );\n};\n\nexport default SwitcherBackground;"],"names":["_jsxs","className","styles","children","_jsx","NavLink","to","_ref","isActive","concat","_ref2","_ref3","_ref4","_ref5","_useState","useState","_useState2","_slicedToArray","value","setValue","_useState3","_useState4","input","setInput","_useState5","_useState6","displayText","setDisplayText","_useState7","_useState8","setIsActive","text","useEffect","console","log","document","querySelector","textContent","_Fragment","HomePage","type","onClick","onSubmit","e","preventDefault","onChange","target","prevState"],"sourceRoot":""}